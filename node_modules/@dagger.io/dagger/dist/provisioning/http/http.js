var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import Client from "../../api/client.gen.js";
/**
 * HTTP is an implementation of EngineConn to connect to an existing
 * engine session over http.
 */
export class HTTP {
    constructor(u) {
        this.url = u;
    }
    Addr() {
        return this.url.toString();
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    Connect(opts) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Client({ host: this.url.host });
        });
    }
    Close() {
        return __awaiter(this, void 0, void 0, function* () {
            return;
        });
    }
}
